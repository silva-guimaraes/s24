

[
    2   -> Divisor
    [ ] arr
    swp
    loop dup 1 > do

        dup Divisor mod 0 = ? .if .else

            .if                 ( [ ] N )
                swp             ( N [ ] )
                Divisor app     ( N [ Divisor ] )
                swp             ( [ Divisor ] N )
                Divisor / ;     ( [ Divisor ] N Divisor / )
            .else 
                Divisor ++ -> Divisor ;
        .end

    over pop
] !-> FactorPrimes


42 pp FactorPrimes
